// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int                  @id @default(autoincrement())
  username    String
  email       String               @unique
  password    String
  salt        String
  publicKey   String
  privateKey  String
  budgets     BudgetUser[]         @relation("AccessibleBudgets")
  savings     BudgetSavingsEntry[] @relation("UserSavingEntries")
  invitations BudgetInvitation[]   @relation("BudgetInvitations")
  createdAt   DateTime
  updatedAt   DateTime
}

model BudgetUser {
  budgetId  Int
  budget    Budget   @relation("BudgetUsers", fields: [budgetId], references: [id], onDelete: Restrict)
  userId    Int
  user      User     @relation("AccessibleBudgets", fields: [userId], references: [id], onDelete: Cascade)
  name      String
  key       String
  isOwner   Boolean  @default(false)
  isDefault Boolean  @default(false)
  createdAt DateTime
  updatedAt DateTime

  @@id([budgetId, userId])
  @@unique([userId, name])
}

model BudgetInvitation {
  id        String   @id @default(uuid())
  budgetId  Int
  budget    Budget   @relation("BudgetInvitations", fields: [budgetId], references: [id], onDelete: Cascade)
  userId    Int
  user      User     @relation("BudgetInvitations", fields: [userId], references: [id], onDelete: Cascade)
  data      String
  expiresAt DateTime

  @@unique([budgetId, userId])
}

model Budget {
  id             Int                  @id @default(autoincrement())
  users          BudgetUser[]         @relation("BudgetUsers")
  goals          BudgetGoal[]         @relation("BudgetGoals")
  savings        BudgetSavingsEntry[] @relation("BudgetSavingsEntries")
  invitations    BudgetInvitation[]   @relation("BudgetInvitations")
  currentSavings String
  freeSavings    String
  createdAt      DateTime
  updatedAt      DateTime
}

model BudgetSavingsEntry {
  id        Int      @id @default(autoincrement())
  budgetId  Int
  budget    Budget   @relation("BudgetSavingsEntries", fields: [budgetId], references: [id], onDelete: Cascade)
  userId    Int?
  user      User?    @relation("UserSavingEntries", fields: [userId], references: [id], onDelete: SetNull)
  amount    String
  createdAt DateTime
  updatedAt DateTime
}

model BudgetGoal {
  id             Int      @id @default(autoincrement())
  budgetId       Int
  budget         Budget   @relation("BudgetGoals", fields: [budgetId], references: [id], onDelete: Cascade)
  name           String
  requiredAmount String
  currentAmount  String
  priority       Int
  status         String   @default("active")
  createdAt      DateTime
  updatedAt      DateTime
}
