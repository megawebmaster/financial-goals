// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int                  @id @default(autoincrement())
  username   String               @unique
  password   String
  salt       String
  publicKey  String
  privateKey String
  budgets    BudgetUser[]         @relation("AccessibleBudgets")
  savings    BudgetSavingsEntry[] @relation("UserSavingEntries")
}

model BudgetUser {
  budgetId Int
  budget   Budget  @relation("BudgetUsers", fields: [budgetId], references: [id], onDelete: Restrict)
  userId   Int
  user     User    @relation("AccessibleBudgets", fields: [userId], references: [id], onDelete: Cascade)
  name     String
  key      String
  isOwner  Boolean @default(false)

  @@id([budgetId, userId])
  @@unique([userId, name])
}

model Budget {
  id             Int                  @id @default(autoincrement())
  users          BudgetUser[]         @relation("BudgetUsers")
  goals          BudgetGoal[]         @relation("BudgetGoals")
  savings        BudgetSavingsEntry[] @relation("BudgetSavingsEntries")
  currentSavings String
  freeSavings    String
}

model BudgetSavingsEntry {
  id       Int    @id @default(autoincrement())
  budgetId Int
  budget   Budget @relation("BudgetSavingsEntries", fields: [budgetId], references: [id], onDelete: Cascade)
  userId   Int
  user     User   @relation("UserSavingEntries", fields: [userId], references: [id], onDelete: Restrict)
  value    String
}

model BudgetGoal {
  id             Int    @id @default(autoincrement())
  budgetId       Int
  budget         Budget @relation("BudgetGoals", fields: [budgetId], references: [id], onDelete: Cascade)
  name           String
  requiredAmount String
  currentAmount  String
  priority       Int
  status         String @default("active")
}
